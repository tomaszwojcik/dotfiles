set background=dark
if has("gui_running")
  " Some stuff here is MacVim specific
  set guifont=Monaco:h14
  " Weird thing that turning off right scroll bar is 'r' and turning off left
  " is capital 'L'
  set guioptions-=r
  set guioptions-=L
  colorscheme railscasts
  " set fullscreen
  let g:rspec_runner = "os_x_iterm"
else
  set t_Co=256
  colorscheme zavaster-dark
endif

set nocompatible

" Speedup tweaks
set synmaxcol=100
set ttyfast
set ttyscroll=3
set nolazyredraw

call pathogen#infect()
call pathogen#helptags()

syntax on
filetype plugin indent on

set cursorline
set colorcolumn=80

" MacVim specific options
set clipboard=unnamed

cnoremap %% <C-R>=expand('%:h').'/'<cr>
let g:agprg = 'ag --nogroup --nocolor --column'

let mapleader = ','
map <leader>/ :so ~/.vimrc<cr>
map <leader>e :e %%

" Movement stuff
"onoremap in :<c-u>normal! f(vi(<cr>

" Run tests
let g:rspec_command = 'Dispatch bundle exec rspec {spec}'

map <leader>t :w<CR>:call RunCurrentSpecFile()<CR>
map <leader>l :w<CR>:call RunNearestSpec()<CR>

" Tabular
nmap <leader>= :Tab /=<CR>
vmap <leader>= :Tab /=<CR>
nmap <leader>{ :Tab /{<CR>
vmap <leader>{ :Tab /{<CR>
nmap <leader>: :Tab /:\zs<CR>
vmap <leader>: :Tab /:\zs<CR><leader>= :Tab /=<CR>
vmap <leader>= :Tab /=<CR>
nmap <leader>{ :Tab /{<CR>
vmap <leader>{ :Tab /{<CR>
nmap <leader>: :Tab /:\zs<CR>
vmap <leader>: :Tab /:\zs<CR>

" Bookmarks
nmap <leader>bl :CopenBookmarks<CR>
nmap <leader>ba :Bookmark 
nmap <leader>bd :DelBookmark 

" Higlight unwanted spaces
set listchars=tab:â–¸\ ,trail:.
set list

" More convinient window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Search options
set hlsearch
set incsearch
set ignorecase smartcase

" Flexible windows
set winwidth=84
set winheight=8
set winminheight=8
set winheight=999

set wildmode=list:longest
set backspace=2
set laststatus=2
" Git status line
set statusline=%<%f%m\ %r\ %=%l,%c\ %p%%\ %y\ %{fugitive#statusline()}

" vim-ruby-debugger options
let g:ruby_debugger_progname = 'mvim'
let g:ruby_debugger_debug_mode = 1

" vim-rubocop
let g:vimrubocop_keymap = 0
nmap <Leader>r :RuboCop<CR>
" nnoremap <leader>r :!rubocop %<cr>

" Remove annoying warning when trying to move to the next/previous buffer and
" there are changes in the current buffer
set hidden

" Set vim-gitgutter colors and symbols
let g:gitgutter_sign_removed = '-'
let g:gitgutter_sign_modified = '*'
let g:gitgutter_sign_modified_removed = '!'

set tags=tags;/
" Don't pollute dirs with swap and temporary files
set backupdir=~/.vim_tmp
set directory=~/.vim_tmp

" Set pwd to the current dir
" autochdir can fail with some plugins
" set autochdir
" Alternatively use this line if autochdir fails:
" autocmd BufEnter * silent! lcd %:p:h

" Intendation
set autoindent
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab

filetype plugin indent on

augroup dev_files
  autocmd!
  autocmd FileType java,python,cs set sw=4 sts=4 et
  autocmd FileType ruby
        \ if expand("%") =~# '_spec\.rb$' |
        \   compiler rspec | setl makeprg=rspec\ $*|
        \ else |
        \   compiler ruby | setl makeprg=ruby\ -wc\ \"%:p\" |
        \ endif
augroup END


" Enable line numbers and toggling between absolute and relative numbering
set number
function! NumberToggle()
  if(&relativenumber == 1)
    let &number = 1
    let &relativenumber = 0
  else
    let &number = 0
    let &relativenumber = 1
  endif
endfunc

nnoremap <C-n> :call NumberToggle()<cr>

" Show higlighting groups for current word (http://vimcasts.org/episodes/creating-colorschemes-for-vim/)
nmap <C-S-G> :call <SID>SynStack()<CR>
function! <SID>SynStack()
  if !exists("*synstack")
    return
  endif
  echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc
